"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[682],{4471:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>d,toc:()=>t});var s=l(4848),o=l(8453);const i={},r="Log",d={id:"modules/log/log",title:"Log",description:"A simple console wrapper with a host of features",source:"@site/../docs/modules/log/log.md",sourceDirName:"modules/log",slug:"/modules/log/",permalink:"/probe.gl/docs/modules/log/",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/probe.gl/tree/master/docs/../docs/modules/log/log.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"About Testing",permalink:"/probe.gl/docs/articles/about-testing"},next:{title:"Stat",permalink:"/probe.gl/docs/modules/stats/stat"}},c={},t=[{value:"Installing",id:"installing",level:2},{value:"Usage",id:"usage",level:2},{value:"Types and Parameters",id:"types-and-parameters",level:2},{value:"Log Function Parameters",id:"log-function-parameters",level:3},{value:"Log Function Options",id:"log-function-options",level:3},{value:"Log Messages",id:"log-messages",level:3},{value:"Colors",id:"colors",level:3},{value:"Methods",id:"methods",level:2},{value:"constructor",id:"constructor",level:3},{value:"enable",id:"enable",level:3},{value:"getLevel",id:"getlevel",level:3},{value:"setLevel",id:"setlevel",level:3},{value:"log",id:"log-1",level:3},{value:"info",id:"info",level:3},{value:"once",id:"once",level:3},{value:"probe",id:"probe",level:3},{value:"warn",id:"warn",level:3},{value:"error",id:"error",level:3},{value:"assert(condition : Boolean [, message: String])",id:"assertcondition--boolean--message-string",level:3},{value:"deprecated",id:"deprecated",level:3},{value:"table",id:"table",level:3},{value:"image",id:"image",level:3},{value:"settings",id:"settings",level:3},{value:"get(setting)",id:"getsetting",level:3},{value:"set(setting, value)",id:"setsetting-value",level:3},{value:"time",id:"time",level:3},{value:"timeEnd",id:"timeend",level:3},{value:"group",id:"group",level:3},{value:"groupCollapsed",id:"groupcollapsed",level:3},{value:"groupEnd",id:"groupend",level:3},{value:"Experimental APIs",id:"experimental-apis",level:2},{value:"withGroup",id:"withgroup",level:3},{value:"trace",id:"trace",level:3}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"log",children:"Log"})}),"\n",(0,s.jsx)(n.p,{children:"A simple console wrapper with a host of features"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Safely exposes advanced features of Chrome and Firefox console APIs, as well as Node.js color logging, by providing fallbacks for missing methods in other environments."}),"\n",(0,s.jsx)(n.li,{children:"Conditional logging - includes a log levels system (aka priorities) that can be controller in the browser console, and settings persist through browser reloads."}),"\n",(0,s.jsx)(n.li,{children:"Defeats log cascades - Caches warnings to ensure only one instance of each warning is emitted"}),"\n",(0,s.jsx)(n.li,{children:"Links to log calls in browser console - Clicking on a log message shows the code that called the log function."}),"\n",(0,s.jsx)(n.li,{children:"Image logging - In Chrome console, it is possible log images"}),"\n",(0,s.jsxs)(n.li,{children:["Improved ",(0,s.jsx)(n.code,{children:"assert"})," messages - Reformats errors from ",(0,s.jsx)(n.code,{children:"assert"})," to show actual error string"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"installing",children:"Installing"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"yarn add @probe.gl/log\n"})}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.p,{children:"Create a new Log"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"import {Log} from '@probe.gl/log';\nconst log = new Log({id: 'my-app'});\nlog.log('Hello world')();  // <<< Note: double function call, is necessary\n"})}),"\n",(0,s.jsx)(n.p,{children:"Add color (only affects output in Node.js)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"import {Log, COLOR} from '@probe.gl/log';\n...\nlog.log({message: 'Hello world', color: COLOR.GREEN});\n"})}),"\n",(0,s.jsx)(n.p,{children:"Log using a message generating function, rather than string (avoid creating message when not needed)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"log.log(2, () => `${expensiveFunction()}`)();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"types-and-parameters",children:"Types and Parameters"}),"\n",(0,s.jsx)(n.h3,{id:"log-function-parameters",children:"Log Function Parameters"}),"\n",(0,s.jsx)(n.p,{children:"Log functions can be called with different parameter combinations"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"log.log(message, ...args)"})," - logLevel defaults to 0"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"log.log(logLevel, message, ...args)"})," - sets logLevel"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"log.log({message, ...options})"})," - additional options can be set, logLevel is zero"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"log.log({logLevel, message, args, ...options})"})," - additional options can be set"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"log-function-options",children:"Log Function Options"}),"\n",(0,s.jsx)(n.p,{children:"When using named parameters (passing an object as first parameter), the following options can be used:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Option"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"logLevel"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Number"})}),(0,s.jsxs)(n.td,{children:['This probe will only "fire" if the log\'s current logLevel is greater than or equal to this value.defaults to ',(0,s.jsx)(n.code,{children:"0"}),", which means that the probe is executed / printed regardless of log level."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"time"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Boolean"})}),(0,s.jsxs)(n.td,{children:["Add a timer since page load (default for ",(0,s.jsx)(n.code,{children:"Log.probe"}),")"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"once"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Boolean"})}),(0,s.jsxs)(n.td,{children:["Logs this message only once (default for ",(0,s.jsx)(n.code,{children:"Log.warn"}),", ",(0,s.jsx)(n.code,{children:"Log.once"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"tag"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"String"})}),(0,s.jsx)(n.td,{children:"Optional tag"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"color"})}),(0,s.jsx)(n.td,{children:"`enum"}),(0,s.jsx)(n.td,{children:"String`"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"background"})}),(0,s.jsx)(n.td,{children:"`enum"}),(0,s.jsx)(n.td,{children:"String`"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"log-messages",children:"Log Messages"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"message"})," argument can be a string or a function returning a string."]}),"\n",(0,s.jsx)(n.h3,{id:"colors",children:"Colors"}),"\n",(0,s.jsxs)(n.p,{children:["To get access to color definitions:\n",(0,s.jsx)(n.code,{children:"import {COLOR} from '@probe.gl/log'"})]}),"\n",(0,s.jsx)(n.p,{children:"Available colors:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"COLOR.BLACK"}),", ",(0,s.jsx)(n.code,{children:"COLOR.RED"}),", ",(0,s.jsx)(n.code,{children:"COLOR.GREEN"}),", ",(0,s.jsx)(n.code,{children:"COLOR.YELLOW"}),", ",(0,s.jsx)(n.code,{children:"COLOR.BLUE"}),", ",(0,s.jsx)(n.code,{children:"COLOR.MAGENTA"}),", ",(0,s.jsx)(n.code,{children:"COLOR.CYAN"}),", ",(0,s.jsx)(n.code,{children:"COLOR.WHITE"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"COLOR.BRIGHT_BLACK"}),", ",(0,s.jsx)(n.code,{children:"COLOR.BRIGHT_RED"}),", ",(0,s.jsx)(n.code,{children:"COLOR.BRIGHT_GREEN"}),", ",(0,s.jsx)(n.code,{children:"COLOR.BRIGHT_YELLOW"}),", ",(0,s.jsx)(n.code,{children:"COLOR.BRIGHT_BLUE"}),", ",(0,s.jsx)(n.code,{children:"COLOR.BRIGHT_MAGENTA"}),", ",(0,s.jsx)(n.code,{children:"COLOR.BRIGHT_CYAN"}),", ",(0,s.jsx)(n.code,{children:"COLOR.BRIGHT_WHITE"})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(n.h3,{id:"constructor",children:"constructor"}),"\n",(0,s.jsxs)(n.p,{children:["Creates a new ",(0,s.jsx)(n.code,{children:"Log"})," instance."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"new Log({id})"})}),"\n",(0,s.jsx)(n.h3,{id:"enable",children:"enable"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"log.enable(false)"})}),"\n",(0,s.jsxs)(n.p,{children:["Accepts one argument ",(0,s.jsx)(n.code,{children:"true"})," or ",(0,s.jsx)(n.code,{children:"false"}),". When disabled, calling log methods do not print anything to the console."]}),"\n",(0,s.jsx)(n.h3,{id:"getlevel",children:"getLevel"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"log.getLevel()"})}),"\n",(0,s.jsx)(n.h3,{id:"setlevel",children:"setLevel"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"log.setLevel(newLevel)"})}),"\n",(0,s.jsx)(n.h3,{id:"log-1",children:"log"}),"\n",(0,s.jsxs)(n.p,{children:["Log a debug level message (uses ",(0,s.jsx)(n.code,{children:"console.debug"})," if available)"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"log.log(message, ...args)"}),"\n",(0,s.jsx)(n.code,{children:"log.log(logLevel, message, ...args)"}),"\n",(0,s.jsx)(n.code,{children:"log.log({logLevel, message, args, ....options})"})]}),"\n",(0,s.jsx)(n.p,{children:"Returns: a function closure that should be called immediately."}),"\n",(0,s.jsx)(n.h3,{id:"info",children:"info"}),"\n",(0,s.jsxs)(n.p,{children:["Log a normal message (uses ",(0,s.jsx)(n.code,{children:"console.info"})," if available)"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"log.info(message, ...args)"}),"\n",(0,s.jsx)(n.code,{children:"log.info(logLevel, message, ...args)"}),"\n",(0,s.jsx)(n.code,{children:"log.info({logLevel, message, args, ....options})"})]}),"\n",(0,s.jsx)(n.p,{children:"Returns: a function closure that should be called immediately."}),"\n",(0,s.jsx)(n.h3,{id:"once",children:"once"}),"\n",(0,s.jsx)(n.p,{children:"Log a normal message, but only once, no console flooding"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"once(logLevel|opts, arg, ...args)"})}),"\n",(0,s.jsx)(n.p,{children:"Returns: a function closure that should be called immediately."}),"\n",(0,s.jsx)(n.h3,{id:"probe",children:"probe"}),"\n",(0,s.jsx)(n.p,{children:"Log a message with time since page load"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"log.probe(message, ...args)"}),"\n",(0,s.jsx)(n.code,{children:"log.probe(logLevel, message, ...args)"}),"\n",(0,s.jsx)(n.code,{children:"log.probe({logLevel, message, args, ....options})"})]}),"\n",(0,s.jsx)(n.p,{children:"Returns: a function closure that should be called immediately."}),"\n",(0,s.jsx)(n.h3,{id:"warn",children:"warn"}),"\n",(0,s.jsxs)(n.p,{children:["Logs a warning (uses the ",(0,s.jsx)(n.code,{children:"console.warn"})," method if available). Logs each warning only once to avoid console flooding."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"log.warn(message, ...args)"}),"\n",(0,s.jsx)(n.code,{children:"log.warn({message, args, ....options})"})]}),"\n",(0,s.jsx)(n.p,{children:"Returns: a function closure that should be called immediately."}),"\n",(0,s.jsx)(n.h3,{id:"error",children:"error"}),"\n",(0,s.jsx)(n.p,{children:"Print an error, using the console's error method"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"log.error(message, ...args)"}),"\n",(0,s.jsx)(n.code,{children:"log.error({message, args, ....options})"})]}),"\n",(0,s.jsx)(n.p,{children:"Returns: a function closure that should be called immediately."}),"\n",(0,s.jsx)(n.h3,{id:"assertcondition--boolean--message-string",children:"assert(condition : Boolean [, message: String])"}),"\n",(0,s.jsx)(n.p,{children:"Throws an error with the supplied message (or a default message) if condition is false"}),"\n",(0,s.jsx)(n.h3,{id:"deprecated",children:"deprecated"}),"\n",(0,s.jsxs)(n.p,{children:["Generates a deprecation warning (using ",(0,s.jsx)(n.code,{children:"log.warn"}),'):\n"',(0,s.jsx)(n.code,{children:"oldUsage"})," is deprecated and will be removed in a later version. Use ",(0,s.jsx)(n.code,{children:"newUsage"}),' instead."']}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"log.deprecated(oldUsage, newUsage)"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"oldUsage"})," - name of deprecated function or parameter"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"newUsage"})," - name of new function or parameter"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Returns: a function closure that should be called immediately."}),"\n",(0,s.jsx)(n.h3,{id:"table",children:"table"}),"\n",(0,s.jsxs)(n.p,{children:["Logs a table (using ",(0,s.jsx)(n.code,{children:"console.table"})," if available)."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"log.table(logLevel|opts, table)"})}),"\n",(0,s.jsx)(n.p,{children:"Returns: a function closure that should be called immediately."}),"\n",(0,s.jsx)(n.h3,{id:"image",children:"image"}),"\n",(0,s.jsx)(n.p,{children:"Logs an image (under Chrome)"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"log.image({logLevel, image, message = '', scale = 1})"})}),"\n",(0,s.jsx)(n.h3,{id:"settings",children:"settings"}),"\n",(0,s.jsx)(n.p,{children:"Logs the current settings as a table"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"log.settings()"})}),"\n",(0,s.jsx)(n.h3,{id:"getsetting",children:"get(setting)"}),"\n",(0,s.jsx)(n.p,{children:"Returns the current value of setting"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"log.get('logLevel')"})}),"\n",(0,s.jsx)(n.h3,{id:"setsetting-value",children:"set(setting, value)"}),"\n",(0,s.jsx)(n.p,{children:"Updates the value of setting"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"log.set('logLevel', 3)"})}),"\n",(0,s.jsx)(n.h3,{id:"time",children:"time"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"log.time(logLevel, label)"})}),"\n",(0,s.jsx)(n.h3,{id:"timeend",children:"timeEnd"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"log.timeEnd(logLevel, label)"})}),"\n",(0,s.jsx)(n.h3,{id:"group",children:"group"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"log.group(logLevel, label)"})}),"\n",(0,s.jsx)(n.h3,{id:"groupcollapsed",children:"groupCollapsed"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"log.group(logLevel, label)"})}),"\n",(0,s.jsx)(n.h3,{id:"groupend",children:"groupEnd"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"log.groupEnd(logLevel)"})}),"\n",(0,s.jsx)(n.h2,{id:"experimental-apis",children:"Experimental APIs"}),"\n",(0,s.jsx)(n.h3,{id:"withgroup",children:"withGroup"}),"\n",(0,s.jsx)(n.p,{children:"Provides an exception safe way to run some code within a group"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"log.withGroup(logLevel, label, func)"})}),"\n",(0,s.jsx)(n.h3,{id:"trace",children:"trace"}),"\n",(0,s.jsx)(n.p,{children:"Prints a stack trace"})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,l)=>{l.d(n,{R:()=>r,x:()=>d});var s=l(6540);const o={},i=s.createContext(o);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);