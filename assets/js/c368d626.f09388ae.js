"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[273],{5680:(e,r,t)=>{t.d(r,{xA:()=>u,yg:()=>m});var n=t(6540);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=n.createContext({}),p=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},u=function(e){var r=p(e.components);return n.createElement(l.Provider,{value:r},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},g=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(t),g=o,m=c["".concat(l,".").concat(g)]||c[g]||d[g]||a;return t?n.createElement(m,i(i({ref:r},u),{},{components:t})):n.createElement(m,i({ref:r},u))}));function m(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=g;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s[c]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=t[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}g.displayName="MDXCreateElement"},6815:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var n=t(9668),o=(t(6540),t(5680));const a={},i="BrowserDriver",s={unversionedId:"modules/test-utils/browser-driver",id:"modules/test-utils/browser-driver",title:"BrowserDriver",description:"A Chrome Browser test automation driver class (based on the Chrome DevTools protocol via the puppeteer module. The BrowserDriver class is primarily intended for automating browser based applications from shell scripts.",source:"@site/../docs/modules/test-utils/browser-driver.md",sourceDirName:"modules/test-utils",slug:"/modules/test-utils/browser-driver",permalink:"/probe.gl/docs/modules/test-utils/browser-driver",draft:!1,editUrl:"https://github.com/visgl/probe.gl/tree/master/docs/../docs/modules/test-utils/browser-driver.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Bench",permalink:"/probe.gl/docs/modules/bench/"},next:{title:"BrowserTestDriver",permalink:"/probe.gl/docs/modules/test-utils/browser-test-driver"}},l={},p=[{value:"Usage",id:"usage",level:2},{value:"Constructor",id:"constructor",level:2},{value:"Methods",id:"methods",level:2},{value:"startBrowser(options : Object)",id:"startbrowseroptions--object",level:3},{value:"openPage(options : Object)",id:"openpageoptions--object",level:3},{value:"stopBrowser()",id:"stopbrowser",level:3},{value:"startServer(config : Object)",id:"startserverconfig--object",level:3},{value:"stopServer()",id:"stopserver",level:3},{value:"exit(statusCode : Number)",id:"exitstatuscode--number",level:3}],u={toc:p},c="wrapper";function d(e){let{components:r,...t}=e;return(0,o.yg)(c,(0,n.A)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"browserdriver"},"BrowserDriver"),(0,o.yg)("p",{class:"badges"},(0,o.yg)("img",{src:"https://img.shields.io/badge/Node.js-v8.0+-blue.svg?style=flat-square",alt:"Node"}),(0,o.yg)("img",{src:"https://img.shields.io/badge/Chrome-v64+-blue.svg?style=flat-square",alt:"Node"})),(0,o.yg)("p",null,"A Chrome Browser test automation driver class (based on the ",(0,o.yg)("a",{parentName:"p",href:"https://chromedevtools.github.io/devtools-protocol/"},"Chrome ",(0,o.yg)("inlineCode",{parentName:"a"},"DevTools")," protocol")," via the ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/GoogleChrome/puppeteer"},(0,o.yg)("inlineCode",{parentName:"a"},"puppeteer"))," module. The ",(0,o.yg)("inlineCode",{parentName:"p"},"BrowserDriver")," class is primarily intended for automating browser based applications from shell scripts."),(0,o.yg)("p",null,"A ",(0,o.yg)("inlineCode",{parentName:"p"},"BrowserDriver")," is typically used to do the following:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Launch/close a Chromium browser instance"),(0,o.yg)("li",{parentName:"ul"},"Start/stop a local web service."),(0,o.yg)("li",{parentName:"ul"},"Opens a browser page with a URL in the browser.")),(0,o.yg)("p",null,"To use this class, ",(0,o.yg)("a",{parentName:"p",href:"https://www.npmjs.com/package/puppeteer"},"puppeteer")," must be installed as a dev dependency."),(0,o.yg)("h2",{id:"usage"},"Usage"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"const {BrowserDriver} = require('@probe.gl/test-utils');\nnew BrowserDriver({id: 'browser-test'});\n")),(0,o.yg)("h2",{id:"constructor"},"Constructor"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"const browserDriver = new BrowserDriver(opts);\n")),(0,o.yg)("p",null,"Parameters:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"opts")," (Object)",(0,o.yg)("ul",{parentName:"li"},(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"id")," (String) - an id for this ",(0,o.yg)("inlineCode",{parentName:"li"},"BrowserDriver")," instance. Default ",(0,o.yg)("inlineCode",{parentName:"li"},"browser-driver"),".")))),(0,o.yg)("h2",{id:"methods"},"Methods"),(0,o.yg)("h3",{id:"startbrowseroptions--object"},"startBrowser(options : Object)"),(0,o.yg)("p",null,"Launch a new browser instance."),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"options")," are directly passed to ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/GoogleChrome/puppeteer/blob/v1.11.0/docs/api.md#puppeteerlaunchoptions"},"puppeteer.launch"),"."),(0,o.yg)("p",null,"Returns a ",(0,o.yg)("inlineCode",{parentName:"p"},"Promise")," that resolves when the browser has started."),(0,o.yg)("h3",{id:"openpageoptions--object"},"openPage(options : Object)"),(0,o.yg)("p",null,"Open a new tab in the browser. Only works after a browser instance is started:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"browserDriver.startBrowser().openPage({url: 'http://localhost'});\n")),(0,o.yg)("p",null,"Parameters:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"url")," (String) - If provided, the url to load in the page."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"exposeFunctions")," (Object) - keys are function names to be added to the page's ",(0,o.yg)("inlineCode",{parentName:"li"},"window")," object, and the values are callback functions to execute in Node.js. See ",(0,o.yg)("a",{parentName:"li",href:"https://github.com/GoogleChrome/puppeteer/blob/v1.11.0/docs/api.md#pageexposefunctionname-puppeteerfunction"},"exposeFunction")," for details."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"onLoad")," (Function) - callback when the page is loaded"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"onConsole")," (Function) - callback when the page logs to console"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"onError")," (Function) - callback if the puppeteer page crashes")),(0,o.yg)("p",null,"Returns a ",(0,o.yg)("inlineCode",{parentName:"p"},"Promise")," that resolves to the page that is open."),(0,o.yg)("h3",{id:"stopbrowser"},"stopBrowser()"),(0,o.yg)("p",null,"Terminate the browser instance."),(0,o.yg)("p",null,"Returns a ",(0,o.yg)("inlineCode",{parentName:"p"},"Promise")," that resolves when the browser is closed."),(0,o.yg)("h3",{id:"startserverconfig--object"},"startServer(config : Object)"),(0,o.yg)("p",null,"Runs a server in a new child process, that the browser can connect to."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"driver.startServer({\n  command: './node_modules/.bin/webpack-dev-server',\n  arguments: ['--config', 'webpack.config.js'],\n  wait: 2000\n})\n")),(0,o.yg)("p",null,"Parameters:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"command")," (string) - the command to run, default ",(0,o.yg)("inlineCode",{parentName:"li"},"'webpack-dev-server'"),"."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"arguments")," (string[]) - a list of string arguments."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"options")," (Object) - options for the new process. Default ",(0,o.yg)("inlineCode",{parentName:"li"},"{maxBuffer: 5000 * 1024}"),". See ",(0,o.yg)("a",{parentName:"li",href:"https://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options"},"child_process.spawn")," for details."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"port")," (",(0,o.yg)("inlineCode",{parentName:"li"},"'auto'"),"|",(0,o.yg)("inlineCode",{parentName:"li"},"false"),") - ",(0,o.yg)("inlineCode",{parentName:"li"},"startServer")," can attempt to bind the service to an available port if ",(0,o.yg)("inlineCode",{parentName:"li"},"port")," is set to ",(0,o.yg)("inlineCode",{parentName:"li"},"'auto'"),". In this case, the command receives additional arguments ",(0,o.yg)("inlineCode",{parentName:"li"},"--port <port>"),". Default ",(0,o.yg)("inlineCode",{parentName:"li"},"'auto'"),"."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"wait")," (Number) - time in milliseconds to wait after executing the command. If any error is generated from the child process during this period, the ",(0,o.yg)("inlineCode",{parentName:"li"},"Promise")," will reject. Otherwise, the service is considered available. Default ",(0,o.yg)("inlineCode",{parentName:"li"},"2000"),".")),(0,o.yg)("p",null,"Returns a ",(0,o.yg)("inlineCode",{parentName:"p"},"Promise")," that resolves to the service URL when the server is available."),(0,o.yg)("h3",{id:"stopserver"},"stopServer()"),(0,o.yg)("p",null,"Stops the server (kills the child process)."),(0,o.yg)("p",null,"Returns: a ",(0,o.yg)("inlineCode",{parentName:"p"},"Promise")," that resolves when the server is closed."),(0,o.yg)("h3",{id:"exitstatuscode--number"},"exit(statusCode : Number)"),(0,o.yg)("p",null,"Exit the process after safely closing down any running browser and server instances."),(0,o.yg)("p",null,"Parameter:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"statusCode")," - the status code to use when exit the process. Default ",(0,o.yg)("inlineCode",{parentName:"li"},"0"),".")))}d.isMDXComponent=!0}}]);