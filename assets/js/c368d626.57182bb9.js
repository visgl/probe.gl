"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[273],{4288:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var t=r(4848),n=r(8453);const o={},i="BrowserDriver",c={id:"modules/test-utils/browser-driver",title:"BrowserDriver",description:"A Chrome Browser test automation driver class (based on the Chrome DevTools protocol via the puppeteer module. The BrowserDriver class is primarily intended for automating browser based applications from shell scripts.",source:"@site/../docs/modules/test-utils/browser-driver.md",sourceDirName:"modules/test-utils",slug:"/modules/test-utils/browser-driver",permalink:"/probe.gl/docs/modules/test-utils/browser-driver",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/probe.gl/tree/master/docs/../docs/modules/test-utils/browser-driver.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Bench",permalink:"/probe.gl/docs/modules/bench/"},next:{title:"BrowserTestDriver",permalink:"/probe.gl/docs/modules/test-utils/browser-test-driver"}},l={},d=[{value:"Usage",id:"usage",level:2},{value:"Constructor",id:"constructor",level:2},{value:"Methods",id:"methods",level:2},{value:"startBrowser(options : Object)",id:"startbrowseroptions--object",level:3},{value:"openPage(options : Object)",id:"openpageoptions--object",level:3},{value:"stopBrowser()",id:"stopbrowser",level:3},{value:"startServer(config : Object)",id:"startserverconfig--object",level:3},{value:"stopServer()",id:"stopserver",level:3},{value:"exit(statusCode : Number)",id:"exitstatuscode--number",level:3}];function a(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"browserdriver",children:"BrowserDriver"})}),"\n",(0,t.jsxs)("p",{class:"badges",children:[(0,t.jsx)("img",{src:"https://img.shields.io/badge/Node.js-v8.0+-blue.svg?style=flat-square",alt:"Node"}),(0,t.jsx)("img",{src:"https://img.shields.io/badge/Chrome-v64+-blue.svg?style=flat-square",alt:"Node"})]}),"\n",(0,t.jsxs)(s.p,{children:["A Chrome Browser test automation driver class (based on the ",(0,t.jsxs)(s.a,{href:"https://chromedevtools.github.io/devtools-protocol/",children:["Chrome ",(0,t.jsx)(s.code,{children:"DevTools"})," protocol"]})," via the ",(0,t.jsx)(s.a,{href:"https://github.com/GoogleChrome/puppeteer",children:(0,t.jsx)(s.code,{children:"puppeteer"})})," module. The ",(0,t.jsx)(s.code,{children:"BrowserDriver"})," class is primarily intended for automating browser based applications from shell scripts."]}),"\n",(0,t.jsxs)(s.p,{children:["A ",(0,t.jsx)(s.code,{children:"BrowserDriver"})," is typically used to do the following:"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Launch/close a Chromium browser instance"}),"\n",(0,t.jsx)(s.li,{children:"Start/stop a local web service."}),"\n",(0,t.jsx)(s.li,{children:"Opens a browser page with a URL in the browser."}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["To use this class, ",(0,t.jsx)(s.a,{href:"https://www.npmjs.com/package/puppeteer",children:"puppeteer"})," must be installed as a dev dependency."]}),"\n",(0,t.jsx)(s.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"const {BrowserDriver} = require('@probe.gl/test-utils');\nnew BrowserDriver({id: 'browser-test'});\n"})}),"\n",(0,t.jsx)(s.h2,{id:"constructor",children:"Constructor"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"const browserDriver = new BrowserDriver(opts);\n"})}),"\n",(0,t.jsx)(s.p,{children:"Parameters:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"opts"})," (Object)","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"id"})," (String) - an id for this ",(0,t.jsx)(s.code,{children:"BrowserDriver"})," instance. Default ",(0,t.jsx)(s.code,{children:"browser-driver"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(s.h3,{id:"startbrowseroptions--object",children:"startBrowser(options : Object)"}),"\n",(0,t.jsx)(s.p,{children:"Launch a new browser instance."}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"options"})," are directly passed to ",(0,t.jsx)(s.a,{href:"https://github.com/GoogleChrome/puppeteer/blob/v1.11.0/docs/api.md#puppeteerlaunchoptions",children:"puppeteer.launch"}),"."]}),"\n",(0,t.jsxs)(s.p,{children:["Returns a ",(0,t.jsx)(s.code,{children:"Promise"})," that resolves when the browser has started."]}),"\n",(0,t.jsx)(s.h3,{id:"openpageoptions--object",children:"openPage(options : Object)"}),"\n",(0,t.jsx)(s.p,{children:"Open a new tab in the browser. Only works after a browser instance is started:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"browserDriver.startBrowser().openPage({url: 'http://localhost'});\n"})}),"\n",(0,t.jsx)(s.p,{children:"Parameters:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"url"})," (String) - If provided, the url to load in the page."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"exposeFunctions"})," (Object) - keys are function names to be added to the page's ",(0,t.jsx)(s.code,{children:"window"})," object, and the values are callback functions to execute in Node.js. See ",(0,t.jsx)(s.a,{href:"https://github.com/GoogleChrome/puppeteer/blob/v1.11.0/docs/api.md#pageexposefunctionname-puppeteerfunction",children:"exposeFunction"})," for details."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"onLoad"})," (Function) - callback when the page is loaded"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"onConsole"})," (Function) - callback when the page logs to console"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"onError"})," (Function) - callback if the puppeteer page crashes"]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Returns a ",(0,t.jsx)(s.code,{children:"Promise"})," that resolves to the page that is open."]}),"\n",(0,t.jsx)(s.h3,{id:"stopbrowser",children:"stopBrowser()"}),"\n",(0,t.jsx)(s.p,{children:"Terminate the browser instance."}),"\n",(0,t.jsxs)(s.p,{children:["Returns a ",(0,t.jsx)(s.code,{children:"Promise"})," that resolves when the browser is closed."]}),"\n",(0,t.jsx)(s.h3,{id:"startserverconfig--object",children:"startServer(config : Object)"}),"\n",(0,t.jsx)(s.p,{children:"Runs a server in a new child process, that the browser can connect to."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"driver.startServer({\n  command: './node_modules/.bin/webpack-dev-server',\n  arguments: ['--config', 'webpack.config.js'],\n  wait: 2000\n})\n"})}),"\n",(0,t.jsx)(s.p,{children:"Parameters:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"command"})," (string) - the command to run, default ",(0,t.jsx)(s.code,{children:"'webpack-dev-server'"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"arguments"})," (string[]) - a list of string arguments."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"options"})," (Object) - options for the new process. Default ",(0,t.jsx)(s.code,{children:"{maxBuffer: 5000 * 1024}"}),". See ",(0,t.jsx)(s.a,{href:"https://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options",children:"child_process.spawn"})," for details."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"port"})," (",(0,t.jsx)(s.code,{children:"'auto'"}),"|",(0,t.jsx)(s.code,{children:"false"}),") - ",(0,t.jsx)(s.code,{children:"startServer"})," can attempt to bind the service to an available port if ",(0,t.jsx)(s.code,{children:"port"})," is set to ",(0,t.jsx)(s.code,{children:"'auto'"}),". In this case, the command receives additional arguments ",(0,t.jsx)(s.code,{children:"--port <port>"}),". Default ",(0,t.jsx)(s.code,{children:"'auto'"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"wait"})," (Number) - time in milliseconds to wait after executing the command. If any error is generated from the child process during this period, the ",(0,t.jsx)(s.code,{children:"Promise"})," will reject. Otherwise, the service is considered available. Default ",(0,t.jsx)(s.code,{children:"2000"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Returns a ",(0,t.jsx)(s.code,{children:"Promise"})," that resolves to the service URL when the server is available."]}),"\n",(0,t.jsx)(s.h3,{id:"stopserver",children:"stopServer()"}),"\n",(0,t.jsx)(s.p,{children:"Stops the server (kills the child process)."}),"\n",(0,t.jsxs)(s.p,{children:["Returns: a ",(0,t.jsx)(s.code,{children:"Promise"})," that resolves when the server is closed."]}),"\n",(0,t.jsx)(s.h3,{id:"exitstatuscode--number",children:"exit(statusCode : Number)"}),"\n",(0,t.jsx)(s.p,{children:"Exit the process after safely closing down any running browser and server instances."}),"\n",(0,t.jsx)(s.p,{children:"Parameter:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"statusCode"})," - the status code to use when exit the process. Default ",(0,t.jsx)(s.code,{children:"0"}),"."]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,s,r)=>{r.d(s,{R:()=>i,x:()=>c});var t=r(6540);const n={},o=t.createContext(n);function i(e){const s=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),t.createElement(o.Provider,{value:s},e.children)}}}]);