"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[816],{5680:(e,t,r)=>{r.d(t,{xA:()=>u,yg:()=>b});var n=r(6540);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(r),d=i,b=p["".concat(l,".").concat(d)]||p[d]||g[d]||o;return r?n.createElement(b,a(a({ref:t},u),{},{components:r})):n.createElement(b,a({ref:t},u))}));function b(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:i,a[1]=s;for(var c=2;c<o;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5113:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>g,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=r(9668),i=(r(6540),r(5680));const o={},a="About Testing",s={unversionedId:"articles/about-testing",id:"articles/about-testing",title:"About Testing",description:"probe.gl provides a set of test utilities intended to facilitate typical testing tasks.",source:"@site/../docs/articles/about-testing.md",sourceDirName:"articles",slug:"/articles/about-testing",permalink:"/probe.gl/docs/articles/about-testing",draft:!1,editUrl:"https://github.com/visgl/probe.gl/tree/master/docs/../docs/articles/about-testing.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"About Benchmarking",permalink:"/probe.gl/docs/articles/about-benchmarking"},next:{title:"Log",permalink:"/probe.gl/docs/modules/log/"}},l={},c=[{value:"Browser Test Automation",id:"browser-test-automation",level:2},{value:"Function Spys",id:"function-spys",level:2},{value:"Visual Regression Testing",id:"visual-regression-testing",level:2}],u={toc:c},p="wrapper";function g(e){let{components:t,...r}=e;return(0,i.yg)(p,(0,n.A)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"about-testing"},"About Testing"),(0,i.yg)("p",null,"probe.gl provides a set of test utilities intended to facilitate typical testing tasks."),(0,i.yg)("h2",{id:"browser-test-automation"},"Browser Test Automation"),(0,i.yg)("p",null,"A key part of the test utilities is a framework for automating browser tests using puppeteer. The intention is to make browser tests invokable from the terminal by e.g. ",(0,i.yg)("inlineCode",{parentName:"p"},"package.json")," scripts, by spawning a browser and waiting until the test results are available, then closing the browser and reporting back the results to the shell script."),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"BrowserDriver")," is a relatively low-level class that provides a ",(0,i.yg)("inlineCode",{parentName:"li"},"Promise")," based interface to ",(0,i.yg)("inlineCode",{parentName:"li"},"puppeteer"),' as well as facilities for spawning a "dev server" and communicating status via exit codes back to the invoking shell. This class is intended as a building block for custom automation tasks.'),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"BrowserTestDriver")," is a subclass of ",(0,i.yg)("inlineCode",{parentName:"li"},"BrowserDriver"),' that is intended to be a "turn-key" solution for typical browser set.')),(0,i.yg)("h2",{id:"function-spys"},"Function Spys"),(0,i.yg)("p",null,"probe.gl provides a ",(0,i.yg)("inlineCode",{parentName:"p"},"makeSpy")," function that enable you to check if your functions were called during exection of test code."),(0,i.yg)("h2",{id:"visual-regression-testing"},"Visual Regression Testing"),(0,i.yg)("p",null,"probe.gl provides a set of experimental image loading and diffing tools. Together with the Automation facilities it is possible to create sophisticated visual regression tests. More to come..."))}g.isMDXComponent=!0}}]);