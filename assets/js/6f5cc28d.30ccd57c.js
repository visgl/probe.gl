"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[616],{5680:(e,n,t)=>{t.d(n,{xA:()=>g,yg:()=>d});var r=t(6540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},g=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},y=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),u=p(t),y=i,d=u["".concat(s,".").concat(y)]||u[y]||c[y]||a;return t?r.createElement(d,o(o({ref:n},g),{},{components:t})):r.createElement(d,o({ref:n},g))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=y;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}y.displayName="MDXCreateElement"},6888:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=t(9668),i=(t(6540),t(5680));const a={},o="Console Logging",l={unversionedId:"articles/about-logging",id:"articles/about-logging",title:"Console Logging",description:"Probe API Signature",source:"@site/../docs/articles/about-logging.md",sourceDirName:"articles",slug:"/articles/about-logging",permalink:"/probe.gl/docs/articles/about-logging",draft:!1,editUrl:"https://github.com/visgl/probe.gl/tree/master/docs/../docs/articles/about-logging.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Usage",permalink:"/probe.gl/docs/get-started/adding-probes"},next:{title:"About Benchmarking",permalink:"/probe.gl/docs/articles/about-benchmarking"}},s={},p=[{value:"Probe API Signature",id:"probe-api-signature",level:3},{value:"Why Double Function Calls?",id:"why-double-function-calls",level:3},{value:"Log Priority",id:"log-priority",level:3},{value:"Log Options",id:"log-options",level:3},{value:"Log Message",id:"log-message",level:3},{value:"Log Parameters",id:"log-parameters",level:3},{value:"Probe Timings",id:"probe-timings",level:2},{value:"Types of Probes",id:"types-of-probes",level:2},{value:"Groups",id:"groups",level:3},{value:"Tables",id:"tables",level:3},{value:"Images",id:"images",level:3}],g={toc:p},u="wrapper";function c(e){let{components:n,...t}=e;return(0,i.yg)(u,(0,r.A)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"console-logging"},"Console Logging"),(0,i.yg)("h3",{id:"probe-api-signature"},"Probe API Signature"),(0,i.yg)("p",null,"A probe.gl function invocation typically looks like this:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-js"},"log.probe(priority, message, ...args)();\n")),(0,i.yg)("p",null,"There are a lot of conventions and built-in capabilities. The following sections contains observations about this signature and provide more background about what is going on."),(0,i.yg)("h3",{id:"why-double-function-calls"},"Why Double Function Calls?"),(0,i.yg)("p",null,"A distinctive aspect of the probe API is the requirement for double function calls, i.e. the extra parenthesis at the end of ",(0,i.yg)("inlineCode",{parentName:"p"},"log.probe``(...)()"),'. The double function calls ensure that the Chrome browser console\'s clickable links are generated correctly. Thanks to these double parentheses you can click on a probe in the Chrome console and "go" directly to the probe call in your application source code.'),(0,i.yg)("p",null,"The double parenthesis is a rather unusual JavaScript programming idiom and if you forget it nothing will be logged. Therefore probe.gl will keep track of whether a returned log function was called and warn you next time you call probe if it wasn't."),(0,i.yg)("h3",{id:"log-priority"},"Log Priority"),(0,i.yg)("p",null,"A basic feature of probe.gl is that you can assign a ",(0,i.yg)("inlineCode",{parentName:"p"},"priority")," threshold to each probe. The term ",(0,i.yg)("inlineCode",{parentName:"p"},"priority"),' can seem a little counter-intuitive at first, as specifying a higher value in your probes actually make them less likely to "fire". The basic idea is that a probe will only "fire" if the log priority is greater than or equal to the probe\'s priority.'),(0,i.yg)("p",null,"Because of this most probe.gl APIs take a ",(0,i.yg)("inlineCode",{parentName:"p"},"priority")," parameter as a first argument."),(0,i.yg)("p",null,"| ",(0,i.yg)("inlineCode",{parentName:"p"},"0")," | Unconditional. Always fires. errors and warnings are priority ",(0,i.yg)("inlineCode",{parentName:"p"},"0")," by default. |\n| ",(0,i.yg)("inlineCode",{parentName:"p"},"1")," | Fires . |\n| ",(0,i.yg)("inlineCode",{parentName:"p"},"2")," | Always fires. |\n| ",(0,i.yg)("inlineCode",{parentName:"p"},"3")," | Always fires. |\n| ",(0,i.yg)("inlineCode",{parentName:"p"},"4")," | Always fires. |"),(0,i.yg)("p",null,"Note that regardless of log level, probes will only fire assuming probe itself is enabled."),(0,i.yg)("h3",{id:"log-options"},"Log Options"),(0,i.yg)("p",null,"The ",(0,i.yg)("inlineCode",{parentName:"p"},"priority")," parameter is an overloaded parameter that can be supplied in the following ways:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"priority")," can be ommitted entirely. In this case, ",(0,i.yg)("inlineCode",{parentName:"p"},"priority")," defaults to ",(0,i.yg)("inlineCode",{parentName:"p"},"0"),", which means that the probe is executed / printed regardless of log level.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"priority")," can be a ",(0,i.yg)("inlineCode",{parentName:"p"},"Number"),", in which case it is used as the ",(0,i.yg)("inlineCode",{parentName:"p"},"priority"),' threshold of this probe, which will only "fire" if the log priority is greater than or equal to this value.')),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"priority")," can be an ",(0,i.yg)("inlineCode",{parentName:"p"},"Object"),", in which case it is used as the ",(0,i.yg)("inlineCode",{parentName:"p"},"priority"),' threshold of this probe. It will only "fire" if the log priority is greater than or equal to this value.')),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"priority")," (",(0,i.yg)("inlineCode",{parentName:"p"},"Number"),") - as above, if not supplied defaults to ",(0,i.yg)("inlineCode",{parentName:"p"},"0")," (fires unconditonally if probe is enabled).")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"once")," (",(0,i.yg)("inlineCode",{parentName:"p"},"Boolean"),"|",(0,i.yg)("inlineCode",{parentName:"p"},"Number"),") - if ",(0,i.yg)("inlineCode",{parentName:"p"},"true"),", the argument string will be cached and this log will only be fired once. If a number, this is the minimum amount of seconds between logging the same message."))),(0,i.yg)("h3",{id:"log-message"},"Log Message"),(0,i.yg)("p",null,"Many probe.gl API calls take a ",(0,i.yg)("inlineCode",{parentName:"p"},"message")," parameter. This ",(0,i.yg)("inlineCode",{parentName:"p"},"message")," is an overloaded parameter that can be either a string or a function that returns a string, which will be called every time the probe fires."),(0,i.yg)("p",null,"The main purpose of supporting functions is to avoid situations where a message string is being generated even when the probe doesn't fire:"),(0,i.yg)("p",null,"A typical inconvenience when logging is unwanted performance impact when generating dynamic log messages. In the case below, the string template literal is being generated every time the line executes, ",(0,i.yg)("em",{parentName:"p"},"even when logging is disabled"),":"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-js"},"log.probe(1, `${object} has ${value}`)();\n")),(0,i.yg)("p",null,"With probe, the solution is easy:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-js"},"log.probe(1, () => `${object} has ${value}`)();\n")),(0,i.yg)("p",null,"Now the performance overhead of the probe is again minimized."),(0,i.yg)("h3",{id:"log-parameters"},"Log Parameters"),(0,i.yg)("p",null,"Most probe method accept a variable number of additional arguments at the end of the function call. These arguments will be passed directly to the underlying console method. This allows you to leverage the built-in Chrome console printing mechanisms for e.g. Objects and Arrays (these allow you to expand and descend into objects)."),(0,i.yg)("h2",{id:"probe-timings"},"Probe Timings"),(0,i.yg)("h2",{id:"types-of-probes"},"Types of Probes"),(0,i.yg)("h3",{id:"groups"},"Groups"),(0,i.yg)("p",null,"Chrome provides a wonderful grouping feature that allows us to organize logs in expandable headers."),(0,i.yg)("h3",{id:"tables"},"Tables"),(0,i.yg)("p",null,"Chrome provides a table logging method"),(0,i.yg)("h3",{id:"images"},"Images"),(0,i.yg)("p",null,"Under Chrome it is possible to log images to the console, using a rather involved styling trick. ",(0,i.yg)("inlineCode",{parentName:"p"},"log.image")," will be a no-op under all other environments."))}c.isMDXComponent=!0}}]);