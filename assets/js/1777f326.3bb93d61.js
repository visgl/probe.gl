"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[144],{5680:(e,r,t)=>{t.d(r,{xA:()=>c,yg:()=>m});var n=t(6540);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=n.createContext({}),s=function(e){var r=n.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},c=function(e){var r=s(e.components);return n.createElement(p.Provider,{value:r},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(t),d=o,m=u["".concat(p,".").concat(d)]||u[d]||g[d]||a;return t?n.createElement(m,i(i({ref:r},c),{},{components:t})):n.createElement(m,i({ref:r},c))}));function m(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var l={};for(var p in r)hasOwnProperty.call(r,p)&&(l[p]=r[p]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=t[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},2393:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>p,contentTitle:()=>i,default:()=>g,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var n=t(9668),o=(t(6540),t(5680));const a={},i="Roadmap",l={unversionedId:"roadmap",id:"roadmap",title:"Roadmap",description:"We are still iterating on probe.gl. Here are some of the ideas, in very rough form...",source:"@site/../docs/roadmap.md",sourceDirName:".",slug:"/roadmap",permalink:"/probe.gl/docs/roadmap",draft:!1,editUrl:"https://github.com/visgl/probe.gl/tree/master/docs/../docs/roadmap.md",tags:[],version:"current",frontMatter:{}},p={},s=[],c={toc:s},u="wrapper";function g(e){let{components:r,...t}=e;return(0,o.yg)(u,(0,n.A)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"roadmap"},"Roadmap"),(0,o.yg)("p",null,"We are still iterating on probe.gl. Here are some of the ideas, in very rough form..."),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},(0,o.yg)("strong",{parentName:"p"},"In-memory log:")," Instead of, or in addition to, logging to the console, ",(0,o.yg)("inlineCode",{parentName:"p"},"Probe.probe")," now saves to an internal array of log messages. This allows you to turn console output off and do post-facto reporting or visualization.")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},(0,o.yg)("strong",{parentName:"p"},"Persistent settings and saved logs")," - Local storage configuration now allows for persistent configuration (including enable/disable) across browser sessions, and makes it easier to have Probe disabled (or enabled, for developers) in production. This also makes it easy to set additional development flags like ",(0,o.yg)("inlineCode",{parentName:"p"},"isNewFeatureEnabled"),". Usage via the JS console:"))),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"Probe.enable().configure({level: 2, useMyDevFeature: true});\n")),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},(0,o.yg)("strong",{parentName:"p"},"Better Console groups")," - Probe.groups allows independently time execution of parallel activities, using console groups to organize the output.")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},(0,o.yg)("strong",{parentName:"p"},"Duration:")," Including ",(0,o.yg)("inlineCode",{parentName:"p"},"start")," and ",(0,o.yg)("inlineCode",{parentName:"p"},"end")," in the metadata object allows Probe\no calculate duration between calls using the same ",(0,o.yg)("inlineCode",{parentName:"p"},"name"),":"))),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"Probe.probe('long_process', {start: true});\ndoLongProcess();\nProbe.probe('long_process', {end: true});\n")))}g.isMDXComponent=!0}}]);